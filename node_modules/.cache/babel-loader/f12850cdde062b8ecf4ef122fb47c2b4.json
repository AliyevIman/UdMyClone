{"ast":null,"code":"import axios from \"axios\";\nimport { BASE_URL } from \"../../api/BaseConfig\";\nimport { USER_LOGIN_ERROR, USER_LOGIN_SUCCESS, USER_LOGOUT } from \"../Constants/UserConstants\";\nexport const loginAction = (email, password) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(`${BASE_URL}api/account/login`, {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_ERROR,\n      payload: error.message\n    });\n  }\n};\nexport const logoutAction = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const registerAction = (firstName, lastName, email, password, confirmPassword) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.post(`${BASE_URL}api/account/register`, {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword\n    });\n    dispatch({\n      type: \"USER_REGISTER_SUCCESS\",\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: \"USER_REGISTER_ERROR\",\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Iman/Desktop/udemy-web-master-sonuncu/src/Redux/Action/UserActions.js"],"names":["axios","BASE_URL","USER_LOGIN_ERROR","USER_LOGIN_SUCCESS","USER_LOGOUT","loginAction","email","password","dispatch","data","post","type","payload","localStorage","setItem","JSON","stringify","error","message","logoutAction","removeItem","registerAction","firstName","lastName","confirmPassword"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,EAA+CC,WAA/C,QAAkE,4BAAlE;AAEA,OAAO,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,QAAP,KAAkB,MAAMC,QAAN,IAAiB;AACxD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAET,QAAS,mBAAvB,EAA0C;AAACK,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA1C,CAAnB;AACAC,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACR,kBADA;AAELS,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAhC;AAEH,GARD,CAQE,OAAOQ,KAAP,EAAc;AACZT,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAACT,gBADA;AAELU,MAAAA,OAAO,EAACK,KAAK,CAACC;AAFT,KAAD,CAAR;AAIH;AACJ,CAfM;AAgBP,OAAO,MAAMC,YAAY,GAAC,MAAKX,QAAD,IAAY;AACtCK,EAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB;AACAZ,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAACP;AAAN,GAAD,CAAR;AACH,CAHM;AAIP,OAAO,MAAMiB,cAAc,GAAC,CAACC,SAAD,EAAWC,QAAX,EAAoBjB,KAApB,EAA0BC,QAA1B,EAAmCiB,eAAnC,KAAqD,MAAMhB,QAAN,IAAiB;AAC9F,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAET,QAAS,sBAAvB,EACnB;AAACqB,MAAAA,SAAD;AAAWC,MAAAA,QAAX;AAAoBjB,MAAAA,KAApB;AAA0BC,MAAAA,QAA1B;AAAmCiB,MAAAA;AAAnC,KADmB,CAAnB;AAEAhB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAC,uBADA;AAELC,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACZT,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAC,qBADA;AAELC,MAAAA,OAAO,EAACK;AAFH,KAAD,CAAR;AAIH;AACJ,CAdM","sourcesContent":["import axios from \"axios\"\nimport { BASE_URL } from \"../../api/BaseConfig\"\nimport { USER_LOGIN_ERROR, USER_LOGIN_SUCCESS, USER_LOGOUT } from \"../Constants/UserConstants\"\n\nexport const loginAction=(email,password)=>async(dispatch)=>{\n    try {\n        const {data}=await axios.post(`${BASE_URL}api/account/login`,{email,password})\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })      \n        localStorage.setItem(\"userInfo\",JSON.stringify(data))  \n        \n    } catch (error) {\n        dispatch({\n            type:USER_LOGIN_ERROR,\n            payload:error.message\n        })  \n    }\n}\nexport const logoutAction=()=>(dispatch)=>{\n    localStorage.removeItem(\"userInfo\")\n    dispatch({type:USER_LOGOUT})\n}\nexport const registerAction=(firstName,lastName,email,password,confirmPassword)=>async(dispatch)=>{\n    try {\n        const {data}=await axios.post(`${BASE_URL}api/account/register`,\n        {firstName,lastName,email,password,confirmPassword})\n        dispatch({\n            type:\"USER_REGISTER_SUCCESS\",\n            payload:data\n        })        \n    } catch (error) {\n        dispatch({\n            type:\"USER_REGISTER_ERROR\",\n            payload:error\n        })  \n    }\n}"]},"metadata":{},"sourceType":"module"}